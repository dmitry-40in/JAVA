// документация пишется так:

// /** */
/**
 * это точки 
 */
public class PPPoint {
/**
 * 
 */
    private int pointX;
    int pointY;
    int pointZ;
/**
 * Эти сами появляются когда /** перед методом ставить
 * @param xxx
 * @param yyy
 * @param zzz
 */
    public PPPoint(int xxx, int yyy, int zzz) {
        
        pointX = xxx;
        pointY = yyy;
        pointZ = zzz;
    }
    // Выше описали максимально широкий конструктор (в данном случае указывает максимальное количество аргументов)

    public PPPoint(int value) {
        // this.pointX = value; - означает как и раньше повториться,
        // но можно вызвать вышестоящий конструктор (НЕ ПОНИМАЮ ПОЧЕМУ ИМЯ КОНСТРУКТОРА НЕ НАДО ВЫЗВАТЬ и должныли они совпадать):
        this(value, value, value);

        // this - обращение к переменных в полях, либо к какому-то конструктуру
        // технически можно сразу имя поля использовать, но технически правильно использовать
        // this.имя_поля_с_переменной - означает что мы хотим найти эту переменную
        // в рамках текущей сущности, те в рамках этого класса
    }

    public int getX() {
        return pointX;
    }

    public void setX(int x) {
        this.pointX = x;
    }
}
